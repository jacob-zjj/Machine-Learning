本章内容：
MapReduce
Python中的hadoop流的使用
使用mrjob库将MapReduce自动化
利用Pegasos算法并行训练支持向量机
Hadoop采用java语言编写，支持在大量机器上分布式处理数据
Hadoop是MapReduce框架的一个免费开源实现，本章首先介绍MapReduce和Hadoop项目，然后学习如何使用Python编写MapReduce作业

MapReduce：分布式计算的框架
优点：可在短时间内完成大量工作
缺点：算法必须经过重写，需要对系统工程有一定的理解
适用数据类型：数值类型和标称型数据

MapReduce的学习要点：
（1）主节点控制MapReduce的作业流程
（2）Mapreduce的作业可以分成map任务和reduce任务
（3）map任务之间不做数据交流，reduce也一样
（4）在map和reduce阶段中间，有一个sort或combine阶段
（5）数据被重复存放在不同的机器上，以防某个机器失效
（6）mapper和reducer传输的数据形式为key/value对

15.2 Hadoop流：
Hadoop是一个开源的java项目，为运行MapReduce作业提供了大量所需的功能。除了分布式计算之外，Hadoop自带分布式文件系统。

15.6示例：分布式SVM的Pegasos算法
在第四章介绍过一个文本分类算法：朴素贝叶斯算法。该算法将文本文档看做是词汇空间里的向量。第6章介绍了效果很好的SVM算法，该算法将每个文档看做是成千上万个特征组成的向量。
在MapReduce框架上使用SVM的一般方法：
（1）收集数据：数据按文本格式存放
（2）准备数据：输入数据已经是可用的格式，所以不需要任何准备工作。如果需要解析一个大规模的数据集，建议使用map作业来完成，从而达到并行处理的目的
（3）分析数据：无
（4）训练算法：与普通的SVM一样，在分类器训练上任需花费大量的时间
（5）测试算法：在二维空间上可视化之后，观察超平面，判断算法是否有效
（6）使用算法：本例不会展示一个完整的应用，但会展示如何在大数据集上训练SVM。该算法其中一个应用场景就是文本分类，通常在文本分类里可能有大量的文档和长千上万的特征。
SMO算法的一个替代品是Pegasos算法，后者可以很容易地写成MapReduce的形式，本节将分析Pegasos算法，介绍如何写出分布式版本的Pegasos算法，最后在mrjob中运行算法。

Pegasos是指原始估计梯度求解器，该算法使用某种形式的随机梯度下降方法来解决SVM所定义的优化问题，研究表明该算法所需的迭代次数取决于用户所期望的精确度而不是数据集的大小。第六章提到，SVM算法的目的是找到一个分类超平面。在二维情况下也就是要找到一条直线，将两类数据分割开来。Pegasos的工作流程是：从训练集中随机挑选一些样本点添加到待处理列表中，之后按序判断每个样本点是否被正确分类；如果是则忽略，如果不是则将其加入到待更新集合。批处理完毕后，权重向量按照这些错分的样本进行更新。

15.6.2 训练算法