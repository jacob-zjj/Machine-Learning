Aprion算法
频繁项集生成
关联规则生成
投票中的关联规则发现

从大规模数据集中寻找物品间的隐含关系被称作关联关系或者关联规则学习。
11.1关联规则
Apriori算法
优点：易编码实现
缺点：在大数据集上可能较慢
适用数据类型：数据型或者标称型数据

关联分析是一种在大数据规模中寻找有趣关系的任务。这些关系可以有两种形式：频繁项集或者关联规则。
频繁项集是经常出现在一块的物品的集合，关联规则暗示两种物品之间可能存在很强的关系。
一个项集的支持度被定义为数据集中包含该项集的记录所占的比例。
可信度或置信度是针对一条诸如{尿布}-{啤酒}的关联规则来定义的，这条规则的可信度被定义为"支持度"。支持度和可信度是用来量化关联分析是否成功的方法。假设想找到支持度大于0.8的所有项集，应该如何去做？一个方法就是生成一个物品所有可能组合的清单，然后对每一种组合统计它出现的频率。当物品成千上万时这样的方式非常的慢，那么Apriori算法就会变得有效

11.2Apriori原理
Apriori算法一般过程
（1）收集数据：使用任意方法
（2）准备数据：任何数据类型都可以，因为我们只保存集合
（3）分析数据：使用任意方法
（4）训练算法：使用Apriori算法来找到频繁项集
（5）测试算法：不需要测试过程
（6）使用算法：用于发现频繁项集以及物品之间的关联规则

由于商品数量有很多，并且组合方式也随之增加，因此对于计算机计算的速度要求太大，因此Apriori原理可以帮我们减少可能感兴趣的项集。（由于23是非频繁的，那么集合123也是非频繁的）

11.3Apriori算法的两个输入参数分别是最小支持度和数据集。该算法首先会生成所有单个物品的项集列表。接着扫描交易记录来查看那些项集满足最小支持度要求，那些不满足最小支持度的集合会被去掉。然后，对剩下来的集合进行组合以生成包含两个元素的项集。

11.4从频繁项集汇中挖掘关联规则
要找到关联规则，我们首先从一个频繁项集开始。我们知道集合中的元素是不重复的，但我们想知道基于这些元素能否获得其他内容。某个元素或者某个元素集合可能会推导出另一个元素。

11.5示例：发现国会投票中的模式




